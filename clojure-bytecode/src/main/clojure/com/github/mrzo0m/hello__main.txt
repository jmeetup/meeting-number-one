1.8.0_161
Classfile /Users/olegbursinov/Java/Projects/jmeetup/clojure-bytecode/target/classes/com/github/mrzo0m/hello.class
  Last modified 11.11.2018; size 1871 bytes
  MD5 checksum 2d85638d0a8118500b61d650b39f19aa
public class com.github.mrzo0m.hello
  minor version: 0
  major version: 49
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Utf8               com/github/mrzo0m/hello
    #2 = Class              #1            // com/github/mrzo0m/hello
    #3 = Utf8               java/lang/Object
    #4 = Class              #3            // java/lang/Object
    #5 = Utf8               main__var
    #6 = Utf8               Lclojure/lang/Var;
    #7 = Utf8               equals__var
    #8 = Utf8               toString__var
    #9 = Utf8               hashCode__var
   #10 = Utf8               clone__var
   #11 = Utf8               <clinit>
   #12 = Utf8               ()V
   #13 = Utf8               com.github.mrzo0m.hello
   #14 = String             #13           // com.github.mrzo0m.hello
   #15 = Utf8               -main
   #16 = String             #15           // -main
   #17 = Utf8               clojure/lang/Var
   #18 = Class              #17           // clojure/lang/Var
   #19 = Utf8               internPrivate
   #20 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
   #21 = NameAndType        #19:#20       // internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
   #22 = Methodref          #18.#21       // clojure/lang/Var.internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
   #23 = NameAndType        #5:#6         // main__var:Lclojure/lang/Var;
   #24 = Fieldref           #2.#23        // com/github/mrzo0m/hello.main__var:Lclojure/lang/Var;
   #25 = Utf8               -equals
   #26 = String             #25           // -equals
   #27 = NameAndType        #7:#6         // equals__var:Lclojure/lang/Var;
   #28 = Fieldref           #2.#27        // com/github/mrzo0m/hello.equals__var:Lclojure/lang/Var;
   #29 = Utf8               -toString
   #30 = String             #29           // -toString
   #31 = NameAndType        #8:#6         // toString__var:Lclojure/lang/Var;
   #32 = Fieldref           #2.#31        // com/github/mrzo0m/hello.toString__var:Lclojure/lang/Var;
   #33 = Utf8               -hashCode
   #34 = String             #33           // -hashCode
   #35 = NameAndType        #9:#6         // hashCode__var:Lclojure/lang/Var;
   #36 = Fieldref           #2.#35        // com/github/mrzo0m/hello.hashCode__var:Lclojure/lang/Var;
   #37 = Utf8               -clone
   #38 = String             #37           // -clone
   #39 = NameAndType        #10:#6        // clone__var:Lclojure/lang/Var;
   #40 = Fieldref           #2.#39        // com/github/mrzo0m/hello.clone__var:Lclojure/lang/Var;
   #41 = Utf8               /com/github/mrzo0m/hello
   #42 = String             #41           // /com/github/mrzo0m/hello
   #43 = Utf8               clojure/lang/Util
   #44 = Class              #43           // clojure/lang/Util
   #45 = Utf8               loadWithClass
   #46 = Utf8               (Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   #47 = NameAndType        #45:#46       // loadWithClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   #48 = Methodref          #44.#47       // clojure/lang/Util.loadWithClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
   #49 = Utf8               <init>
   #50 = NameAndType        #49:#12       // "<init>":()V
   #51 = Methodref          #4.#50        // java/lang/Object."<init>":()V
   #52 = Utf8               equals
   #53 = Utf8               (Ljava/lang/Object;)Z
   #54 = Utf8               isBound
   #55 = Utf8               ()Z
   #56 = NameAndType        #54:#55       // isBound:()Z
   #57 = Methodref          #18.#56       // clojure/lang/Var.isBound:()Z
   #58 = Utf8               get
   #59 = Utf8               ()Ljava/lang/Object;
   #60 = NameAndType        #58:#59       // get:()Ljava/lang/Object;
   #61 = Methodref          #18.#60       // clojure/lang/Var.get:()Ljava/lang/Object;
   #62 = Utf8               clojure/lang/IFn
   #63 = Class              #62           // clojure/lang/IFn
   #64 = Utf8               invoke
   #65 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #66 = NameAndType        #64:#65       // invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #67 = InterfaceMethodref #63.#66       // clojure/lang/IFn.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #68 = Utf8               java/lang/Boolean
   #69 = Class              #68           // java/lang/Boolean
   #70 = Utf8               booleanValue
   #71 = NameAndType        #70:#55       // booleanValue:()Z
   #72 = Methodref          #69.#71       // java/lang/Boolean.booleanValue:()Z
   #73 = NameAndType        #52:#53       // equals:(Ljava/lang/Object;)Z
   #74 = Methodref          #4.#73        // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #75 = Utf8               toString
   #76 = Utf8               ()Ljava/lang/String;
   #77 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #78 = NameAndType        #64:#77       // invoke:(Ljava/lang/Object;)Ljava/lang/Object;
   #79 = InterfaceMethodref #63.#78       // clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
   #80 = Utf8               java/lang/String
   #81 = Class              #80           // java/lang/String
   #82 = NameAndType        #75:#76       // toString:()Ljava/lang/String;
   #83 = Methodref          #4.#82        // java/lang/Object.toString:()Ljava/lang/String;
   #84 = Utf8               hashCode
   #85 = Utf8               ()I
   #86 = Utf8               java/lang/Number
   #87 = Class              #86           // java/lang/Number
   #88 = Utf8               intValue
   #89 = NameAndType        #88:#85       // intValue:()I
   #90 = Methodref          #87.#89       // java/lang/Number.intValue:()I
   #91 = NameAndType        #84:#85       // hashCode:()I
   #92 = Methodref          #4.#91        // java/lang/Object.hashCode:()I
   #93 = Utf8               clone
   #94 = NameAndType        #93:#59       // clone:()Ljava/lang/Object;
   #95 = Methodref          #4.#94        // java/lang/Object.clone:()Ljava/lang/Object;
   #96 = Utf8               main
   #97 = Utf8               ([Ljava/lang/String;)V
   #98 = Utf8               clojure/lang/RT
   #99 = Class              #98           // clojure/lang/RT
  #100 = Utf8               seq
  #101 = Utf8               (Ljava/lang/Object;)Lclojure/lang/ISeq;
  #102 = NameAndType        #100:#101     // seq:(Ljava/lang/Object;)Lclojure/lang/ISeq;
  #103 = Methodref          #99.#102      // clojure/lang/RT.seq:(Ljava/lang/Object;)Lclojure/lang/ISeq;
  #104 = Utf8               applyTo
  #105 = Utf8               (Lclojure/lang/ISeq;)Ljava/lang/Object;
  #106 = NameAndType        #104:#105     // applyTo:(Lclojure/lang/ISeq;)Ljava/lang/Object;
  #107 = InterfaceMethodref #63.#106      // clojure/lang/IFn.applyTo:(Lclojure/lang/ISeq;)Ljava/lang/Object;
  #108 = Utf8               java/lang/UnsupportedOperationException
  #109 = Class              #108          // java/lang/UnsupportedOperationException
  #110 = Utf8               com.github.mrzo0m.hello/-main not defined
  #111 = String             #110          // com.github.mrzo0m.hello/-main not defined
  #112 = Utf8               (Ljava/lang/String;)V
  #113 = NameAndType        #49:#112      // "<init>":(Ljava/lang/String;)V
  #114 = Methodref          #109.#113     // java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
  #115 = Utf8               Code
{
  private static final clojure.lang.Var main__var;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final clojure.lang.Var equals__var;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final clojure.lang.Var toString__var;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final clojure.lang.Var hashCode__var;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  private static final clojure.lang.Var clone__var;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PRIVATE, ACC_STATIC, ACC_FINAL

  public static {};
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: ldc           #14                 // String com.github.mrzo0m.hello
         2: ldc           #16                 // String -main
         4: invokestatic  #22                 // Method clojure/lang/Var.internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
         7: putstatic     #24                 // Field main__var:Lclojure/lang/Var;
        10: ldc           #14                 // String com.github.mrzo0m.hello
        12: ldc           #26                 // String -equals
        14: invokestatic  #22                 // Method clojure/lang/Var.internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
        17: putstatic     #28                 // Field equals__var:Lclojure/lang/Var;
        20: ldc           #14                 // String com.github.mrzo0m.hello
        22: ldc           #30                 // String -toString
        24: invokestatic  #22                 // Method clojure/lang/Var.internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
        27: putstatic     #32                 // Field toString__var:Lclojure/lang/Var;
        30: ldc           #14                 // String com.github.mrzo0m.hello
        32: ldc           #34                 // String -hashCode
        34: invokestatic  #22                 // Method clojure/lang/Var.internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
        37: putstatic     #36                 // Field hashCode__var:Lclojure/lang/Var;
        40: ldc           #14                 // String com.github.mrzo0m.hello
        42: ldc           #38                 // String -clone
        44: invokestatic  #22                 // Method clojure/lang/Var.internPrivate:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
        47: putstatic     #40                 // Field clone__var:Lclojure/lang/Var;
        50: ldc           #42                 // String /com/github/mrzo0m/hello
        52: ldc           #2                  // class com/github/mrzo0m/hello
        54: invokestatic  #48                 // Method clojure/lang/Util.loadWithClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
        57: pop
        58: return

  public com.github.mrzo0m.hello();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #51                 // Method java/lang/Object."<init>":()V
         4: return

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: getstatic     #28                 // Field equals__var:Lclojure/lang/Var;
         3: dup
         4: invokevirtual #57                 // Method clojure/lang/Var.isBound:()Z
         7: ifeq          16
        10: invokevirtual #61                 // Method clojure/lang/Var.get:()Ljava/lang/Object;
        13: goto          18
        16: pop
        17: aconst_null
        18: dup
        19: ifnull        41
        22: checkcast     #63                 // class clojure/lang/IFn
        25: aload_0
        26: aload_1
        27: invokeinterface #67,  3           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        32: checkcast     #69                 // class java/lang/Boolean
        35: invokevirtual #72                 // Method java/lang/Boolean.booleanValue:()Z
        38: goto          47
        41: pop
        42: aload_0
        43: aload_1
        44: invokespecial #74                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        47: ireturn

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #32                 // Field toString__var:Lclojure/lang/Var;
         3: dup
         4: invokevirtual #57                 // Method clojure/lang/Var.isBound:()Z
         7: ifeq          16
        10: invokevirtual #61                 // Method clojure/lang/Var.get:()Ljava/lang/Object;
        13: goto          18
        16: pop
        17: aconst_null
        18: dup
        19: ifnull        37
        22: checkcast     #63                 // class clojure/lang/IFn
        25: aload_0
        26: invokeinterface #79,  2           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        31: checkcast     #81                 // class java/lang/String
        34: goto          42
        37: pop
        38: aload_0
        39: invokespecial #83                 // Method java/lang/Object.toString:()Ljava/lang/String;
        42: areturn

  public int hashCode();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #36                 // Field hashCode__var:Lclojure/lang/Var;
         3: dup
         4: invokevirtual #57                 // Method clojure/lang/Var.isBound:()Z
         7: ifeq          16
        10: invokevirtual #61                 // Method clojure/lang/Var.get:()Ljava/lang/Object;
        13: goto          18
        16: pop
        17: aconst_null
        18: dup
        19: ifnull        40
        22: checkcast     #63                 // class clojure/lang/IFn
        25: aload_0
        26: invokeinterface #79,  2           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        31: checkcast     #87                 // class java/lang/Number
        34: invokevirtual #90                 // Method java/lang/Number.intValue:()I
        37: goto          45
        40: pop
        41: aload_0
        42: invokespecial #92                 // Method java/lang/Object.hashCode:()I
        45: ireturn

  public java.lang.Object clone();
    descriptor: ()Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #40                 // Field clone__var:Lclojure/lang/Var;
         3: dup
         4: invokevirtual #57                 // Method clojure/lang/Var.isBound:()Z
         7: ifeq          16
        10: invokevirtual #61                 // Method clojure/lang/Var.get:()Ljava/lang/Object;
        13: goto          18
        16: pop
        17: aconst_null
        18: dup
        19: ifnull        34
        22: checkcast     #63                 // class clojure/lang/IFn
        25: aload_0
        26: invokeinterface #79,  2           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        31: goto          39
        34: pop
        35: aload_0
        36: invokespecial #95                 // Method java/lang/Object.clone:()Ljava/lang/Object;
        39: areturn

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: getstatic     #24                 // Field main__var:Lclojure/lang/Var;
         3: dup
         4: invokevirtual #57                 // Method clojure/lang/Var.isBound:()Z
         7: ifeq          16
        10: invokevirtual #61                 // Method clojure/lang/Var.get:()Ljava/lang/Object;
        13: goto          18
        16: pop
        17: aconst_null
        18: dup
        19: ifnull        38
        22: checkcast     #63                 // class clojure/lang/IFn
        25: aload_0
        26: invokestatic  #103                // Method clojure/lang/RT.seq:(Ljava/lang/Object;)Lclojure/lang/ISeq;
        29: invokeinterface #107,  2          // InterfaceMethod clojure/lang/IFn.applyTo:(Lclojure/lang/ISeq;)Ljava/lang/Object;
        34: pop
        35: goto          48
        38: new           #109                // class java/lang/UnsupportedOperationException
        41: dup
        42: ldc           #111                // String com.github.mrzo0m.hello/-main not defined
        44: invokespecial #114                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
        47: athrow
        48: return
}
