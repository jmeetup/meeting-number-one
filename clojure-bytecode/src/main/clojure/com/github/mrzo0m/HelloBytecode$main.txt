1.8.0_181
Classfile /C:/Users/16678596/IdeaProjects/jmeetup/clojure-bytecode/target/classes/com/github/mrzo0m/hello$main.class
  Last modified 09.11.2018; size 942 bytes
  MD5 checksum 8562449493e636f32894a4f03cc3401e
  Compiled from "hello.clj"
public final class com.github.mrzo0m.hello$main extends clojure.lang.AFunction
  minor version: 0
  major version: 49
  flags: ACC_PUBLIC, ACC_FINAL, ACC_SUPER
Constant pool:
   #1 = Utf8               com/github/mrzo0m/hello$main
   #2 = Class              #1             // com/github/mrzo0m/hello$main
   #3 = Utf8               clojure/lang/AFunction
   #4 = Class              #3             // clojure/lang/AFunction
   #5 = Utf8               hello.clj
   #6 = Utf8               <init>
   #7 = Utf8               ()V
   #8 = NameAndType        #6:#7          // "<init>":()V
   #9 = Methodref          #4.#8          // clojure/lang/AFunction."<init>":()V
  #10 = Utf8               invokeStatic
  #11 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
  #12 = Utf8               const__0
  #13 = Utf8               Lclojure/lang/Var;
  #14 = NameAndType        #12:#13        // const__0:Lclojure/lang/Var;
  #15 = Fieldref           #2.#14         // com/github/mrzo0m/hello$main.const__0:Lclojure/lang/Var;
  #16 = Utf8               clojure/lang/Var
  #17 = Class              #16            // clojure/lang/Var
  #18 = Utf8               getRawRoot
  #19 = Utf8               ()Ljava/lang/Object;
  #20 = NameAndType        #18:#19        // getRawRoot:()Ljava/lang/Object;
  #21 = Methodref          #17.#20        // clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
  #22 = Utf8               clojure/lang/IFn
  #23 = Class              #22            // clojure/lang/IFn
  #24 = Utf8               Hello World!
  #25 = String             #24            // Hello World!
  #26 = Utf8               invoke
  #27 = NameAndType        #26:#11        // invoke:(Ljava/lang/Object;)Ljava/lang/Object;
  #28 = InterfaceMethodref #23.#27        // clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
  #29 = Utf8               args
  #30 = Utf8               Ljava/lang/Object;
  #31 = NameAndType        #10:#11        // invokeStatic:(Ljava/lang/Object;)Ljava/lang/Object;
  #32 = Methodref          #2.#31         // com/github/mrzo0m/hello$main.invokeStatic:(Ljava/lang/Object;)Ljava/lang/Object;
  #33 = Utf8               <clinit>
  #34 = Utf8               clojure.core
  #35 = String             #34            // clojure.core
  #36 = Utf8               println
  #37 = String             #36            // println
  #38 = Utf8               clojure/lang/RT
  #39 = Class              #38            // clojure/lang/RT
  #40 = Utf8               var
  #41 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
  #42 = NameAndType        #40:#41        // var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
  #43 = Methodref          #39.#42        // clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
  #44 = Utf8               Code
  #45 = Utf8               LineNumberTable
  #46 = Utf8               LocalVariableTable
  #47 = Utf8               SourceFile
  #48 = Utf8               SourceDebugExtension
{
  public static final clojure.lang.Var const__0;
    descriptor: Lclojure/lang/Var;
    flags: ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  public com.github.mrzo0m.hello$main();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #9                  // Method clojure/lang/AFunction."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static java.lang.Object invokeStatic(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=1, args_size=1
         0: getstatic     #15                 // Field const__0:Lclojure/lang/Var;
         3: invokevirtual #21                 // Method clojure/lang/Var.getRawRoot:()Ljava/lang/Object;
         6: checkcast     #23                 // class clojure/lang/IFn
         9: ldc           #25                 // String Hello World!
        11: invokeinterface #28,  2           // InterfaceMethod clojure/lang/IFn.invoke:(Ljava/lang/Object;)Ljava/lang/Object;
        16: areturn
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  args   Ljava/lang/Object;
      LineNumberTable:
        line 3: 0
        line 4: 6
        line 4: 11

  public java.lang.Object invoke(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_1
         1: aconst_null
         2: astore_1
         3: invokestatic  #32                 // Method invokeStatic:(Ljava/lang/Object;)Ljava/lang/Object;
         6: areturn
      LineNumberTable:
        line 3: 3

  public static {};
    descriptor: ()V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=0, args_size=0
         0: ldc           #35                 // String clojure.core
         2: ldc           #37                 // String println
         4: invokestatic  #43                 // Method clojure/lang/RT.var:(Ljava/lang/String;Ljava/lang/String;)Lclojure/lang/Var;
         7: checkcast     #17                 // class clojure/lang/Var
        10: putstatic     #15                 // Field const__0:Lclojure/lang/Var;
        13: return
      LineNumberTable:
        line 3: 0
}
SourceFile: "hello.clj"
SourceDebugExtension:
  SMAP
  hello.java
  Clojure
  *S Clojure
  *F
  + 1 hello.clj
  com/github/mrzo0m/hello.clj
  *L
  1#1,4:1
  *E
